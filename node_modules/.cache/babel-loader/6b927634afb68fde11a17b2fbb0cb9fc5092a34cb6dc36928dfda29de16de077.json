{"ast":null,"code":"const countSyllables = require('syllable');\nconst normalize = require('./normalize').normalize;\nconst {\n  ACTUAL_SUFFIXES\n} = require('./constants');\n\n/*\n * Scores a word\n *\n * @param {Function} rand Random number generator\n */\n\nfunction score(word, _ref) {\n  let {\n    rand\n  } = _ref;\n  let score = 0;\n  score += scoreSyllables(word);\n  score += scoreSuffix(word);\n  score += scoreLength(word);\n  score += rand() * 0.4;\n  return score;\n}\n\n/**\n * Scores a word based on syllables\n * @private\n */\n\nfunction scoreSyllables(word) {\n  const syllables = countSyllables(word);\n  if (syllables === 2) return 6.1;else if (syllables === 3) return 6;else if (syllables > 4) return 2;else return 4;\n}\n\n/**\n * Scores a word based on suffixes\n * @private\n */\n\nfunction scoreSuffix(word) {\n  const isActual = ACTUAL_SUFFIXES.some(suffix => word.substr(word.length - suffix.length) === suffix);\n  return isActual ? -1.5 : 0;\n}\n\n/**\n * Scores a word based on length\n * @private\n */\n\nfunction scoreLength(word) {\n  const len = normalize(word).length;\n  if (len < 9) return 0.1;else return 0;\n}\n\n/*\n * Export\n */\n\nmodule.exports = {\n  score\n};","map":{"version":3,"names":["countSyllables","require","normalize","ACTUAL_SUFFIXES","score","word","_ref","rand","scoreSyllables","scoreSuffix","scoreLength","syllables","isActual","some","suffix","substr","length","len","module","exports"],"sources":["D:/Internship(Tecunique)/Reactjs/Domain_name_search/node_modules/@rstacruz/startup-name-generator/lib/score.js"],"sourcesContent":["const countSyllables = require('syllable')\nconst normalize = require('./normalize').normalize\nconst { ACTUAL_SUFFIXES } = require('./constants')\n\n/*\n * Scores a word\n *\n * @param {Function} rand Random number generator\n */\n\nfunction score (word, { rand }) {\n  let score = 0\n  score += scoreSyllables(word)\n  score += scoreSuffix(word)\n  score += scoreLength(word)\n  score += rand() * 0.4\n  return score\n}\n\n/**\n * Scores a word based on syllables\n * @private\n */\n\nfunction scoreSyllables (word) {\n  const syllables = countSyllables(word)\n\n  if (syllables === 2) return 6.1\n  else if (syllables === 3) return 6\n  else if (syllables > 4) return 2\n  else return 4\n}\n\n/**\n * Scores a word based on suffixes\n * @private\n */\n\nfunction scoreSuffix (word) {\n  const isActual = ACTUAL_SUFFIXES.some(suffix =>\n    word.substr(word.length - suffix.length) === suffix)\n\n  return isActual ? -1.5 : 0\n}\n\n/**\n * Scores a word based on length\n * @private\n */\n\nfunction scoreLength (word) {\n  const len = normalize(word).length\n  if (len < 9) return 0.1\n  else return 0\n}\n\n/*\n * Export\n */\n\nmodule.exports = { score }\n"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC,CAACC,SAAS;AAClD,MAAM;EAAEC;AAAgB,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAElD;AACA;AACA;AACA;AACA;;AAEA,SAASG,KAAKA,CAAEC,IAAI,EAAAC,IAAA,EAAY;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAC5B,IAAIF,KAAK,GAAG,CAAC;EACbA,KAAK,IAAII,cAAc,CAACH,IAAI,CAAC;EAC7BD,KAAK,IAAIK,WAAW,CAACJ,IAAI,CAAC;EAC1BD,KAAK,IAAIM,WAAW,CAACL,IAAI,CAAC;EAC1BD,KAAK,IAAIG,IAAI,CAAC,CAAC,GAAG,GAAG;EACrB,OAAOH,KAAK;AACd;;AAEA;AACA;AACA;AACA;;AAEA,SAASI,cAAcA,CAAEH,IAAI,EAAE;EAC7B,MAAMM,SAAS,GAAGX,cAAc,CAACK,IAAI,CAAC;EAEtC,IAAIM,SAAS,KAAK,CAAC,EAAE,OAAO,GAAG,MAC1B,IAAIA,SAAS,KAAK,CAAC,EAAE,OAAO,CAAC,MAC7B,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,CAAC,MAC3B,OAAO,CAAC;AACf;;AAEA;AACA;AACA;AACA;;AAEA,SAASF,WAAWA,CAAEJ,IAAI,EAAE;EAC1B,MAAMO,QAAQ,GAAGT,eAAe,CAACU,IAAI,CAACC,MAAM,IAC1CT,IAAI,CAACU,MAAM,CAACV,IAAI,CAACW,MAAM,GAAGF,MAAM,CAACE,MAAM,CAAC,KAAKF,MAAM,CAAC;EAEtD,OAAOF,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA,SAASF,WAAWA,CAAEL,IAAI,EAAE;EAC1B,MAAMY,GAAG,GAAGf,SAAS,CAACG,IAAI,CAAC,CAACW,MAAM;EAClC,IAAIC,GAAG,GAAG,CAAC,EAAE,OAAO,GAAG,MAClB,OAAO,CAAC;AACf;;AAEA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG;EAAEf;AAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}